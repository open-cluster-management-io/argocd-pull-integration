apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-pull-integration-controller
  namespace: {{ .Values.controller.namespace }}
  labels:
    app.kubernetes.io/name: argocd-pull-integration-controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: argocd-agent-addon
    app.kubernetes.io/managed-by: helm
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-pull-integration-controller
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-pull-integration-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/part-of: argocd-agent-addon
    spec:
      serviceAccountName: argocd-pull-integration-controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
      - name: manager
        image: "{{ .Values.image }}:{{ .Values.tag }}"
        imagePullPolicy: IfNotPresent
        command:
        - /manager
        args:
        - --mode=controller
        - --leader-elect
        env:
        - name: CONTROLLER_IMAGE
          value: "{{ .Values.image }}:{{ .Values.tag }}"
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - name: tmp-volume
        emptyDir: {}
      terminationGracePeriodSeconds: 10
